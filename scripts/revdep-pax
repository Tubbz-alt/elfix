#!/usr/bin/env python

from os import listdir
#from os import listdir, path
import re

import pax


def forward_linkings():
	var_db_pkg = '/var/db/pkg'
	elf_objects = {}
	for cat in listdir(var_db_pkg):
		catdir = '%s/%s' % (var_db_pkg, cat)
		for pkg in listdir(catdir):
			pkgdir = '%s/%s' % (catdir, pkg)
			need = '%s/%s' % (pkgdir, 'NEEDED')
			try:
				g = open(need, 'r')
				needs = g.readlines()
				for line in needs:
					line = line.strip()
					linking = re.split('\s', line)
					elf = linking[0]
					elf_deps = re.split(',', linking[1])
					elf_objects[elf] = elf_deps 
			except:
				break

	return elf_objects 


def reverse_linkings( binaries ):
	libraries = {}
	for binary in binaries:
		for library in binaries[binary]:
			libraries[library] = []

	for binary in binaries:
		for library in binaries[binary]:
			libraries[library].append(binary)

	return libraries


elf_objects = forward_linkings()
elf_deps = reverse_linkings( elf_objects )

""" Print out mapping: binary -> library, library, library ...
for elf in elf_objects:
	print elf
	for elf_deps in elf_objects[elf]:
		print "\t", elf_deps
"""

""" Print out mapping: library -> binary, binary, binary ...
for elf in elf_deps:
	print elf
	for elf_object in elf_deps[elf]:
		print "\t", elf_object
		#if not path.exists(binary):
		#	print "%s doesn't exist!" % binary
"""
